Grading at Thu Sep 27 05:58:41 UTC 2018
Attempting to compile:
#################################################
testcase1:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==683== Memcheck, a memory error detector
==683== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==683== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==683== 
==683== Parent PID: 682
==683== 
==683== 
==683== HEAP SUMMARY:
==683==     in use at exit: 120 bytes in 1 blocks
==683==   total heap usage: 18 allocs, 17 frees, 11,092 bytes allocated
==683== 
==683== 120 bytes in 1 blocks are definitely lost in loss record 1 of 1
==683==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==683==    by 0x4EA89E7: getdelim (iogetdelim.c:62)
==683==    by 0x400BC2: readKVs (in /graderhome/work/32_kvs/kv_test)
==683==    by 0x400DCA: main (in /graderhome/work/32_kvs/kv_test)
==683== 
==683== LEAK SUMMARY:
==683==    definitely lost: 120 bytes in 1 blocks
==683==    indirectly lost: 0 bytes in 0 blocks
==683==      possibly lost: 0 bytes in 0 blocks
==683==    still reachable: 0 bytes in 0 blocks
==683==         suppressed: 0 bytes in 0 blocks
==683== 
==683== For counts of detected and suppressed errors, rerun with: -v
==683== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
#################################################
testcase2:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==700== Memcheck, a memory error detector
==700== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==700== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==700== 
==700== Parent PID: 699
==700== 
==700== 
==700== HEAP SUMMARY:
==700==     in use at exit: 120 bytes in 1 blocks
==700==   total heap usage: 18 allocs, 17 frees, 11,180 bytes allocated
==700== 
==700== 120 bytes in 1 blocks are definitely lost in loss record 1 of 1
==700==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==700==    by 0x4EA89E7: getdelim (iogetdelim.c:62)
==700==    by 0x400BC2: readKVs (in /graderhome/work/32_kvs/kv_test)
==700==    by 0x400DCA: main (in /graderhome/work/32_kvs/kv_test)
==700== 
==700== LEAK SUMMARY:
==700==    definitely lost: 120 bytes in 1 blocks
==700==    indirectly lost: 0 bytes in 0 blocks
==700==      possibly lost: 0 bytes in 0 blocks
==700==    still reachable: 0 bytes in 0 blocks
==700==         suppressed: 0 bytes in 0 blocks
==700== 
==700== For counts of detected and suppressed errors, rerun with: -v
==700== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
#################################################
testcase3:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==717== Memcheck, a memory error detector
==717== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==717== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==717== 
==717== Parent PID: 716
==717== 
==717== 
==717== HEAP SUMMARY:
==717==     in use at exit: 120 bytes in 1 blocks
==717==   total heap usage: 6 allocs, 5 frees, 10,928 bytes allocated
==717== 
==717== 120 bytes in 1 blocks are definitely lost in loss record 1 of 1
==717==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==717==    by 0x4EA89E7: getdelim (iogetdelim.c:62)
==717==    by 0x400BC2: readKVs (in /graderhome/work/32_kvs/kv_test)
==717==    by 0x400DCA: main (in /graderhome/work/32_kvs/kv_test)
==717== 
==717== LEAK SUMMARY:
==717==    definitely lost: 120 bytes in 1 blocks
==717==    indirectly lost: 0 bytes in 0 blocks
==717==      possibly lost: 0 bytes in 0 blocks
==717==    still reachable: 0 bytes in 0 blocks
==717==         suppressed: 0 bytes in 0 blocks
==717== 
==717== For counts of detected and suppressed errors, rerun with: -v
==717== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: B
